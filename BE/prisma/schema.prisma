generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


  model Members{
  id                  String            @id     @default(uuid())
  name                String
  email               String            @unique
  phone               String            @unique
  status              Boolean           @default(false)
  verified            Verfied?
  profile             Profile?
  details             Details?
  created_at          DateTime          @default(now())
  updated_at          DateTime          @updatedAt
  @@map("Member")
}
model Profile{
  id                   String            @id     @default(uuid())
  img                  String?
  member               Members           @relation(fields: [memberId],references: [id])
  memberId             String            @unique
  bio                  String
  address              String
  city                 String
  state                String
  country              String
  pincode              Int
  dob                  DateTime
  gender               Gender
@@map("Profile")
}  

model Details{
  id                   String            @id     @default(uuid())
  member               Members           @relation(fields: [memberId],references: [id])
  memberId             String            @unique
  education            String[]
  hobbie               String[]
  interests            String[]
  overview             String
  work                 Work[]
  skills               String[]
  @@map("Details")
}

model Work{
  id                   String            @id     @default(uuid())
  member               Details           @relation(fields: [detailsid],references: [id])
  detailsid             String            @unique
  oragnasation         String
  position             String
  start_date           DateTime
  end_date             DateTime
  description          String
  @@map("Work")
}
 model Verfied{
  id                   String            @id     @default(uuid())
  adharno              Int               @unique
  adharimg             String  
  enrollmentno         Int               @unique
  enrollmentimg        String
  realphoto            String
  member               Members           @relation(fields: [memberId],references: [id])
  memberId             String            @unique
  verified             Boolean           @default(false)
  verified_at          DateTime          @default(now())
  @@map("Verified")

 }
 model Auth {
  id                    String             @id @default(uuid())
  email                 String             @unique
  password              String
  role                  UserRole           @default(member)
  userId                String?
  @@map("Auth")
}


model Otpverify {
  id                     String             @id     @default(uuid())
  email                  String             @unique
  otp                    String?
  password               String
  expiresAt              DateTime?          @default(now())
  createdAt              DateTime           @default(now())
  updatedAt              DateTime           @updatedAt
  @@map("Otpverify")
}
model forgotPassword{
  id           String      @id     @default(uuid())
  email        String      @unique
  otp          String?
  expiresAt    DateTime   @default(now())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}
enum UserRole{
  admin
  member
  verfied

}
enum Gender{
  male
  female
  notdisclosed
  other
}



